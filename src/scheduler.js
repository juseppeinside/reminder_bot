const cron = require("node-cron");
const {
  getAllNotifications,
  decrementDaysLeft,
  decrementMonthsLeft,
  cleanupExpiredNotifications,
  deleteNotification,
} = require("./db");
const config = require("../config");

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
const initScheduler = (bot) => {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  cron.schedule("* * * * *", async () => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –ú–°–ö (UTC+3)
      const now = new Date();
      const moscowTime = new Date(now.getTime() + 3 * 60 * 60 * 1000); // UTC+3
      const hours = moscowTime.getUTCHours();
      const minutes = moscowTime.getUTCMinutes();
      const currentTime = `${hours.toString().padStart(2, "0")}:${minutes
        .toString()
        .padStart(2, "0")}`;

      // –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞
      const currentDayOfMonth = moscowTime.getUTCDate();

      // –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (0 - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, 1 - –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –∏ —Ç.–¥.)
      const currentDayOfWeek = moscowTime.getUTCDay();

      // –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
      const currentDate = moscowTime.toISOString().split("T")[0];

      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      const notifications = await getAllNotifications();

      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      const notificationsToDelete = [];

      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ ID –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—è—Ü–µ
      const processedMonthlyIds = [];

      // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≤–µ—Ä—à–∞—é—â–∏—Ö—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const expiringNotifications = {};

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
      for (const notification of notifications) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        for (const time of notification.times) {
          // –ï—Å–ª–∏ —á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
          if (time === currentTime) {
            // –î–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            if (notification.type === "daily") {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –¥–∞—Ç–∞
              if (notification.target_date) {
                // –ï—Å–ª–∏ –¥–∞—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                if (notification.target_date !== currentDate) {
                  continue;
                }
              }
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω—ã –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
              else if (
                notification.days_of_week &&
                notification.days_of_week.length > 0
              ) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –æ–¥–Ω–∏–º –∏–∑ –¥–Ω–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                if (!notification.days_of_week.includes(currentDayOfWeek)) {
                  // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                  continue;
                }
              }

              try {
                await bot.sendMessage(
                  notification.user_id,
                  `‚è∞ ${notification.message}`
                );
                console.log(
                  `‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${notification.id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${notification.user_id}`
                );

                // –ï—Å–ª–∏ –∑–∞–¥–∞–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –¥–∞—Ç–∞ (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ), –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
                if (notification.target_date) {
                  notificationsToDelete.push(notification.id);

                  // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
                  if (!expiringNotifications[notification.user_id]) {
                    expiringNotifications[notification.user_id] = [];
                  }
                  expiringNotifications[notification.user_id].push({
                    message: notification.message,
                    type: "daily",
                  });
                }
                // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å 1 –¥–µ–Ω—å –∏ –Ω–µ—Ç –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏, –¥–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
                else if (
                  notification.days_left === 1 &&
                  (!notification.days_of_week ||
                    notification.days_of_week.length === 0)
                ) {
                  notificationsToDelete.push(notification.id);

                  // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
                  if (!expiringNotifications[notification.user_id]) {
                    expiringNotifications[notification.user_id] = [];
                  }
                  expiringNotifications[notification.user_id].push({
                    message: notification.message,
                    type: "daily",
                  });
                }
              } catch (err) {
                console.error(
                  `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${notification.id}:`,
                  err.message
                );
              }
            }
            // –î–ª—è –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            else if (
              notification.type === "monthly" &&
              notification.day_of_month === currentDayOfMonth
            ) {
              try {
                await bot.sendMessage(
                  notification.user_id,
                  `üìÖ ${notification.message}`
                );
                console.log(
                  `‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${notification.id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${notification.user_id}`
                );

                // –î–æ–±–∞–≤–ª—è–µ–º ID –≤ —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                processedMonthlyIds.push(notification.id);

                // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å 1 –º–µ—Å—è—Ü, –¥–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                if (notification.months_left === 1) {
                  notificationsToDelete.push(notification.id);

                  // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
                  if (!expiringNotifications[notification.user_id]) {
                    expiringNotifications[notification.user_id] = [];
                  }
                  expiringNotifications[notification.user_id].push({
                    message: notification.message,
                    type: "monthly",
                  });
                }
              } catch (err) {
                console.error(
                  `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${notification.id}:`,
                  err.message
                );
              }
            }
          }
        }
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
      for (const userId in expiringNotifications) {
        if (expiringNotifications.hasOwnProperty(userId)) {
          const userExpiredNotifications = expiringNotifications[userId];

          for (const notification of userExpiredNotifications) {
            try {
              const typeEmoji = notification.type === "daily" ? "‚è∞" : "üìÖ";
              await bot.sendMessage(
                userId,
                `${typeEmoji} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${notification.message}" –ø–æ–¥–æ—à–ª–æ –∫ –∫–æ–Ω—Ü—É üîö\n\n–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.`
              );
              console.log(
                `üì¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`
              );
            } catch (err) {
              console.error(
                `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏:`,
                err.message
              );
            }
          }
        }
      }

      // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Å–≤–æ—é –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—Ç–ø—Ä–∞–≤–∫—É
      for (const id of notificationsToDelete) {
        try {
          await deleteNotification(id);
          console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${id} –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏`);
        } catch (err) {
          console.error(
            `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${id}:`,
            err.message
          );
        }
      }

      // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–µ—Å—è—Ü–µ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      if (processedMonthlyIds.length > 0) {
        try {
          const updatedCount = await decrementMonthsLeft(processedMonthlyIds);
          console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);
        } catch (err) {
          console.error(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:",
            err
          );
        }
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", err);
    }
  });

  // –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π –≤ –ø–æ–ª–Ω–æ—á—å –ø–æ –ú–°–ö
  cron.schedule(
    "0 0 * * *",
    async () => {
      try {
        console.log("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...");
        const updatedCount = await decrementDaysLeft();
        console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);

        // –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–µ–∫—à–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const deletedCount = await cleanupExpiredNotifications();
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ ${deletedCount} –∏—Å—Ç–µ–∫—à–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π:", err);
      }
    },
    {
      timezone: config.TIMEZONE,
    }
  );

  console.log("üöÄ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω");
};

module.exports = { initScheduler };
